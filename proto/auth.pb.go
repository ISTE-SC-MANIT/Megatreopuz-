// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateLocalPlayerRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Phone                string   `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	College              string   `protobuf:"bytes,6,opt,name=college,proto3" json:"college,omitempty"`
	Country              string   `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	Year                 uint32   `protobuf:"varint,8,opt,name=year,proto3" json:"year,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLocalPlayerRequest) Reset()         { *m = CreateLocalPlayerRequest{} }
func (m *CreateLocalPlayerRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLocalPlayerRequest) ProtoMessage()    {}
func (*CreateLocalPlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *CreateLocalPlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLocalPlayerRequest.Unmarshal(m, b)
}
func (m *CreateLocalPlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLocalPlayerRequest.Marshal(b, m, deterministic)
}
func (m *CreateLocalPlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLocalPlayerRequest.Merge(m, src)
}
func (m *CreateLocalPlayerRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLocalPlayerRequest.Size(m)
}
func (m *CreateLocalPlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLocalPlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLocalPlayerRequest proto.InternalMessageInfo

func (m *CreateLocalPlayerRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateLocalPlayerRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CreateLocalPlayerRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *CreateLocalPlayerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateLocalPlayerRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *CreateLocalPlayerRequest) GetCollege() string {
	if m != nil {
		return m.College
	}
	return ""
}

func (m *CreateLocalPlayerRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *CreateLocalPlayerRequest) GetYear() uint32 {
	if m != nil {
		return m.Year
	}
	return 0
}

type CheckUsernameAvailabilityRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUsernameAvailabilityRequest) Reset()         { *m = CheckUsernameAvailabilityRequest{} }
func (m *CheckUsernameAvailabilityRequest) String() string { return proto.CompactTextString(m) }
func (*CheckUsernameAvailabilityRequest) ProtoMessage()    {}
func (*CheckUsernameAvailabilityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *CheckUsernameAvailabilityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUsernameAvailabilityRequest.Unmarshal(m, b)
}
func (m *CheckUsernameAvailabilityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUsernameAvailabilityRequest.Marshal(b, m, deterministic)
}
func (m *CheckUsernameAvailabilityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUsernameAvailabilityRequest.Merge(m, src)
}
func (m *CheckUsernameAvailabilityRequest) XXX_Size() int {
	return xxx_messageInfo_CheckUsernameAvailabilityRequest.Size(m)
}
func (m *CheckUsernameAvailabilityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUsernameAvailabilityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUsernameAvailabilityRequest proto.InternalMessageInfo

func (m *CheckUsernameAvailabilityRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type CheckUsernameAvailabilityResponse struct {
	Available            bool     `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUsernameAvailabilityResponse) Reset()         { *m = CheckUsernameAvailabilityResponse{} }
func (m *CheckUsernameAvailabilityResponse) String() string { return proto.CompactTextString(m) }
func (*CheckUsernameAvailabilityResponse) ProtoMessage()    {}
func (*CheckUsernameAvailabilityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{2}
}

func (m *CheckUsernameAvailabilityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUsernameAvailabilityResponse.Unmarshal(m, b)
}
func (m *CheckUsernameAvailabilityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUsernameAvailabilityResponse.Marshal(b, m, deterministic)
}
func (m *CheckUsernameAvailabilityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUsernameAvailabilityResponse.Merge(m, src)
}
func (m *CheckUsernameAvailabilityResponse) XXX_Size() int {
	return xxx_messageInfo_CheckUsernameAvailabilityResponse.Size(m)
}
func (m *CheckUsernameAvailabilityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUsernameAvailabilityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUsernameAvailabilityResponse proto.InternalMessageInfo

func (m *CheckUsernameAvailabilityResponse) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

type CheckStateResponse struct {
	Initialised          bool     `protobuf:"varint,1,opt,name=initialised,proto3" json:"initialised,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckStateResponse) Reset()         { *m = CheckStateResponse{} }
func (m *CheckStateResponse) String() string { return proto.CompactTextString(m) }
func (*CheckStateResponse) ProtoMessage()    {}
func (*CheckStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{3}
}

func (m *CheckStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckStateResponse.Unmarshal(m, b)
}
func (m *CheckStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckStateResponse.Marshal(b, m, deterministic)
}
func (m *CheckStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckStateResponse.Merge(m, src)
}
func (m *CheckStateResponse) XXX_Size() int {
	return xxx_messageInfo_CheckStateResponse.Size(m)
}
func (m *CheckStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckStateResponse proto.InternalMessageInfo

func (m *CheckStateResponse) GetInitialised() bool {
	if m != nil {
		return m.Initialised
	}
	return false
}

func init() {
	proto.RegisterType((*CreateLocalPlayerRequest)(nil), "auth.CreateLocalPlayerRequest")
	proto.RegisterType((*CheckUsernameAvailabilityRequest)(nil), "auth.CheckUsernameAvailabilityRequest")
	proto.RegisterType((*CheckUsernameAvailabilityResponse)(nil), "auth.CheckUsernameAvailabilityResponse")
	proto.RegisterType((*CheckStateResponse)(nil), "auth.CheckStateResponse")
}

func init() {
	proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874)
}

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 388 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xcf, 0x8b, 0xd3, 0x40,
	0x14, 0x26, 0xda, 0xdd, 0xed, 0xbe, 0xa0, 0xe0, 0xe0, 0x61, 0x0c, 0x22, 0x31, 0x07, 0xdd, 0x4b,
	0x1b, 0x54, 0xd0, 0x9b, 0x18, 0xcb, 0x1e, 0x16, 0x54, 0x24, 0x59, 0x2f, 0xde, 0xa6, 0xe9, 0xa3,
	0x19, 0x9c, 0x64, 0xe2, 0xfc, 0xa8, 0xc4, 0x3f, 0xd5, 0x3f, 0xc4, 0xb3, 0x64, 0x26, 0xa9, 0xa9,
	0x50, 0x7b, 0xca, 0xfb, 0xbe, 0x2f, 0xef, 0x7b, 0xbf, 0x06, 0x80, 0x59, 0x53, 0x2d, 0x5b, 0x25,
	0x8d, 0x24, 0xb3, 0x3e, 0x8e, 0x42, 0x6b, 0xb8, 0xd0, 0x9e, 0x4a, 0x7e, 0x05, 0x40, 0x57, 0x0a,
	0x99, 0xc1, 0x0f, 0xb2, 0x64, 0xe2, 0xb3, 0x60, 0x1d, 0xaa, 0x1c, 0xbf, 0x5b, 0xd4, 0x86, 0x3c,
	0x84, 0x33, 0xac, 0x19, 0x17, 0x34, 0x88, 0x83, 0xab, 0xcb, 0xdc, 0x03, 0x12, 0xc1, 0xbc, 0x65,
	0x5a, 0xff, 0x90, 0x6a, 0x43, 0xef, 0x38, 0x61, 0x8f, 0x7b, 0xcd, 0x6a, 0x54, 0x0d, 0xab, 0x91,
	0xde, 0xf5, 0xda, 0x88, 0x09, 0x81, 0x99, 0xe3, 0x67, 0x8e, 0x77, 0x71, 0x5f, 0xa1, 0xad, 0x64,
	0x83, 0xf4, 0xcc, 0x57, 0x70, 0x80, 0x50, 0xb8, 0x28, 0xa5, 0x10, 0xb8, 0x45, 0x7a, 0xee, 0xf8,
	0x11, 0x7a, 0xc5, 0x36, 0x46, 0x75, 0xf4, 0x62, 0x54, 0x1c, 0xec, 0xdd, 0x3b, 0x64, 0x8a, 0xce,
	0xe3, 0xe0, 0xea, 0x5e, 0xee, 0xe2, 0xe4, 0x2d, 0xc4, 0xab, 0x0a, 0xcb, 0x6f, 0x5f, 0x86, 0x16,
	0xb2, 0x1d, 0xe3, 0x82, 0xad, 0xb9, 0xe0, 0xa6, 0x1b, 0x67, 0x9c, 0x76, 0x1c, 0x1c, 0x76, 0x9c,
	0x64, 0xf0, 0xf4, 0x3f, 0xf9, 0xba, 0x95, 0x8d, 0x46, 0xf2, 0x18, 0x2e, 0x99, 0xe7, 0x85, 0x77,
	0x98, 0xe7, 0x7f, 0x89, 0xe4, 0x35, 0x10, 0x67, 0x51, 0x18, 0x66, 0x70, 0x9f, 0x13, 0x43, 0xc8,
	0x1b, 0x6e, 0x38, 0x13, 0x5c, 0xe3, 0x66, 0xc8, 0x9a, 0x52, 0x2f, 0x7f, 0x07, 0x10, 0x66, 0xd6,
	0x54, 0x05, 0xaa, 0x1d, 0x2f, 0x91, 0xbc, 0x83, 0x07, 0xe5, 0xbf, 0x67, 0x22, 0x4f, 0x96, 0xee,
	0xb8, 0xc7, 0xee, 0x17, 0x85, 0x5e, 0xbf, 0xae, 0x5b, 0xd3, 0x11, 0x01, 0x8f, 0xca, 0x63, 0xc3,
	0x90, 0x67, 0x83, 0xd3, 0x89, 0x6d, 0x45, 0xcf, 0x4f, 0xfe, 0x37, 0x4c, 0xf8, 0x06, 0xee, 0xef,
	0xab, 0xb9, 0xd9, 0xc9, 0xb4, 0x99, 0x88, 0x4e, 0x7c, 0x0e, 0x56, 0xf3, 0xfe, 0xc5, 0xd7, 0x74,
	0xcb, 0x4d, 0x65, 0xd7, 0xcb, 0x52, 0xd6, 0xe9, 0x4d, 0x71, 0x7b, 0xbd, 0x28, 0x56, 0x8b, 0x8f,
	0xd9, 0xa7, 0x9b, 0xdb, 0xb4, 0xc6, 0x2d, 0x33, 0x0a, 0x65, 0x6b, 0x7f, 0x2e, 0xfa, 0xfc, 0xd4,
	0xbd, 0xe1, 0xf5, 0xb9, 0xfb, 0xbc, 0xfa, 0x13, 0x00, 0x00, 0xff, 0xff, 0x8c, 0x67, 0x28, 0x78,
	0xeb, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	CreateLocalPlayer(ctx context.Context, in *CreateLocalPlayerRequest, opts ...grpc.CallOption) (*Empty, error)
	CheckUsernameAvailability(ctx context.Context, in *CheckUsernameAvailabilityRequest, opts ...grpc.CallOption) (*CheckUsernameAvailabilityResponse, error)
	CheckUserState(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CheckStateResponse, error)
}

type authServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthServiceClient(cc grpc.ClientConnInterface) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) CreateLocalPlayer(ctx context.Context, in *CreateLocalPlayerRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/auth.AuthService/createLocalPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) CheckUsernameAvailability(ctx context.Context, in *CheckUsernameAvailabilityRequest, opts ...grpc.CallOption) (*CheckUsernameAvailabilityResponse, error) {
	out := new(CheckUsernameAvailabilityResponse)
	err := c.cc.Invoke(ctx, "/auth.AuthService/checkUsernameAvailability", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) CheckUserState(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CheckStateResponse, error) {
	out := new(CheckStateResponse)
	err := c.cc.Invoke(ctx, "/auth.AuthService/checkUserState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	CreateLocalPlayer(context.Context, *CreateLocalPlayerRequest) (*Empty, error)
	CheckUsernameAvailability(context.Context, *CheckUsernameAvailabilityRequest) (*CheckUsernameAvailabilityResponse, error)
	CheckUserState(context.Context, *Empty) (*CheckStateResponse, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) CreateLocalPlayer(ctx context.Context, req *CreateLocalPlayerRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLocalPlayer not implemented")
}
func (*UnimplementedAuthServiceServer) CheckUsernameAvailability(ctx context.Context, req *CheckUsernameAvailabilityRequest) (*CheckUsernameAvailabilityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUsernameAvailability not implemented")
}
func (*UnimplementedAuthServiceServer) CheckUserState(ctx context.Context, req *Empty) (*CheckStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUserState not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_CreateLocalPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLocalPlayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).CreateLocalPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.AuthService/CreateLocalPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).CreateLocalPlayer(ctx, req.(*CreateLocalPlayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_CheckUsernameAvailability_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUsernameAvailabilityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).CheckUsernameAvailability(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.AuthService/CheckUsernameAvailability",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).CheckUsernameAvailability(ctx, req.(*CheckUsernameAvailabilityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_CheckUserState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).CheckUserState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.AuthService/CheckUserState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).CheckUserState(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createLocalPlayer",
			Handler:    _AuthService_CreateLocalPlayer_Handler,
		},
		{
			MethodName: "checkUsernameAvailability",
			Handler:    _AuthService_CheckUsernameAvailability_Handler,
		},
		{
			MethodName: "checkUserState",
			Handler:    _AuthService_CheckUserState_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
